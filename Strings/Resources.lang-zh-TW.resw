<?xml version="1.0" encoding="utf-8"?>
<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="using:CommunityToolkit.WinUI.Controls" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:group="using:ConnectX.Shared.Messages.Group" xmlns:local="using:FluentLauncher.Extension.ConnectX.Views" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" x:Class="FluentLauncher.Extension.ConnectX.Views.ConnectXPage" Loaded="Page_Loaded" Unloaded="Page_Unloaded" mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Default">
                    <StaticResource x:Key="SettingsCardBackground" ResourceKey="CardBackgroundFillColorDefaultBrush"/>
                    <StaticResource x:Key="SettingsCardBackgroundPointerOver" ResourceKey="ControlFillColorSecondaryBrush"/>
                    <StaticResource x:Key="SettingsCardBackgroundPressed" ResourceKey="ControlFillColorTertiaryBrush"/>
                    <StaticResource x:Key="SettingsCardBackgroundDisabled" ResourceKey="ControlFillColorDisabledBrush"/>

                    <StaticResource x:Key="SettingsCardForeground" ResourceKey="TextFillColorPrimaryBrush"/>
                    <StaticResource x:Key="SettingsCardForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush"/>
                    <StaticResource x:Key="SettingsCardForegroundPressed" ResourceKey="TextFillColorSecondaryBrush"/>
                    <StaticResource x:Key="SettingsCardForegroundDisabled" ResourceKey="TextFillColorDisabledBrush"/>

                    <StaticResource x:Key="SettingsCardBorderBrush" ResourceKey="CardStrokeColorDefaultBrush"/>
                    <StaticResource x:Key="SettingsCardBorderBrushPointerOver" ResourceKey="ControlElevationBorderBrush"/>
                    <StaticResource x:Key="SettingsCardBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush"/>
                    <StaticResource x:Key="SettingsCardBorderBrushDisabled" ResourceKey="ControlStrokeColorDefaultBrush"/>
                </ResourceDictionary>

                <ResourceDictionary x:Key="Light">
                    <StaticResource x:Key="SettingsCardBackground" ResourceKey="CardBackgroundFillColorDefaultBrush"/>
                    <StaticResource x:Key="SettingsCardBackgroundPointerOver" ResourceKey="ControlFillColorSecondaryBrush"/>
                    <StaticResource x:Key="SettingsCardBackgroundPressed" ResourceKey="ControlFillColorTertiaryBrush"/>
                    <StaticResource x:Key="SettingsCardBackgroundDisabled" ResourceKey="ControlFillColorDisabledBrush"/>

                    <StaticResource x:Key="SettingsCardForeground" ResourceKey="TextFillColorPrimaryBrush"/>
                    <StaticResource x:Key="SettingsCardForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush"/>
                    <StaticResource x:Key="SettingsCardForegroundPressed" ResourceKey="TextFillColorSecondaryBrush"/>
                    <StaticResource x:Key="SettingsCardForegroundDisabled" ResourceKey="TextFillColorDisabledBrush"/>

                    <StaticResource x:Key="SettingsCardBorderBrush" ResourceKey="CardStrokeColorDefaultBrush"/>
                    <StaticResource x:Key="SettingsCardBorderBrushPointerOver" ResourceKey="ControlElevationBorderBrush"/>
                    <StaticResource x:Key="SettingsCardBorderBrushPressed" ResourceKey="ControlStrokeColorDefaultBrush"/>
                    <StaticResource x:Key="SettingsCardBorderBrushDisabled" ResourceKey="ControlStrokeColorDefaultBrush"/>
                </ResourceDictionary>

                <ResourceDictionary x:Key="HighContrast">
                    <StaticResource x:Key="SettingsCardBackground" ResourceKey="SystemColorButtonFaceColorBrush"/>
                    <StaticResource x:Key="SettingsCardBackgroundPointerOver" ResourceKey="SystemColorHighlightTextColorBrush"/>
                    <StaticResource x:Key="SettingsCardBackgroundPressed" ResourceKey="SystemColorHighlightTextColorBrush"/>
                    <StaticResource x:Key="SettingsCardBackgroundDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush"/>

                    <StaticResource x:Key="SettingsCardForeground" ResourceKey="SystemColorButtonTextColorBrush"/>
                    <StaticResource x:Key="SettingsCardForegroundPointerOver" ResourceKey="SystemColorHighlightColorBrush"/>
                    <StaticResource x:Key="SettingsCardForegroundPressed" ResourceKey="SystemColorHighlightTextColorBrush"/>
                    <StaticResource x:Key="SettingsCardForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush"/>

                    <StaticResource x:Key="SettingsCardBorderBrush" ResourceKey="SystemColorButtonTextColorBrush"/>
                    <StaticResource x:Key="SettingsCardBorderBrushPointerOver" ResourceKey="SystemColorHighlightColorBrush"/>
                    <StaticResource x:Key="SettingsCardBorderBrushPressed" ResourceKey="SystemColorHighlightTextColorBrush"/>
                    <StaticResource x:Key="SettingsCardBorderBrushDisabled" ResourceKey="SystemControlDisabledTransparentBrush"/>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*" MinHeight="320"/>
        </Grid.RowDefinitions>

        <StackPanel Name="stackPanel" MaxWidth="1000" Margin="{ThemeResource PageMarginWithStackPanel}" Spacing="15">
            <TextBlock Style="{ThemeResource TitleTextBlockStyle}" Text="ConnectX 多人游戏"/>
        </StackPanel>

        <ScrollViewer Grid.Row="1">
            <Border x:Name="border" Margin="{ThemeResource PageMarginWithBorder}">
                <StackPanel MaxWidth="1000" HorizontalAlignment="Stretch" Spacing="{StaticResource SettingsCardSpacing}">
                    <StackPanel.ChildrenTransitions>
                        <EntranceThemeTransition FromVerticalOffset="50"/>
                        <RepositionThemeTransition IsStaggeringEnabled="False"/>
                    </StackPanel.ChildrenTransitions>

                    <InfoBar Title="服务稳定性警告" IsClosable="True" IsOpen="True" Message="这是一项实验性功能，我们只允许预览通道的部分版本以插件形式载入此功能，且我们暂不希望将该项功能作为启动器本体的一项功能。首先，由于我们使用插件载入，可能会出现一些不可预测的代码问题。其次，联机底层使用的是开源项目 ConnectX ，目前该项目仍处于测试阶段，不稳定。另外，我们也不能保证我们提供的服务节点稳定运行。如果遭遇问题，我们有可能会在未来某一段时间终止我们的服务节点，仅保留该插件的工具性质" Opacity="0.85" Severity="Warning"/>

                    <InfoBar Title="公益性服务" IsClosable="False" IsOpen="True" Message="请不要攻击我们的联机服务器。我们的服务是完全公益性质的，且服务器无法负担得起高连接数和高带宽流量。MiaoVps 向我们提供了一个赞助节点，你可以在下方的服务节点中选择。另外，用户可以自行部署 ConnectX.Server 节点并使用。" Opacity="0.85" Severity="Success"/>

                    <StackPanel Orientation="Horizontal" Spacing="8">
                        <HyperlinkButton Content="ConnectX 仓库" NavigateUri="https://github.com/Corona-Studio/ConnectX"/>
                        <HyperlinkButton Content="MiaoVps" NavigateUri="https://www.miaovps.com"/>
                    </StackPanel>

                    <TextBlock Style="{ThemeResource SettingsSectionHeaderTextBlockStyle}" Text="服务状态"/>

                    <InfoBar x:Name="ConnectedInfoBar" Title="已连接到 ConnectX 服务" Margin="0,0,0,-2" x:Load="{x:Bind VM.IsConnected, Mode=OneWay}" IsClosable="False" IsOpen="True" Opacity="0.85" Severity="Success"/>

                    <InfoBar x:Name="ConnectInfoBar" Title="未连接到 ConnectX 服务" Margin="0,0,0,-2" x:Load="{x:Bind VM.IsConnected, Mode=OneWay, Converter={StaticResource InvertBoolConverter}}" IsClosable="False" IsOpen="True" Opacity="0.85" Severity="Warning"/>

                    <InfoBar x:Name="ConnectErrorBar" Title="连接到 ConnectX 服务时发生错误" Margin="0,0,0,-2" x:Load="{x:Bind VM.ConnectFailed, Mode=OneWay}" IsClosable="False" IsOpen="True" Opacity="0.85" Severity="Error"/>

                    <controls:SettingsExpander Description="连接到 ConnectX 服务来创建和加入联机房间" Header="ConnectX 远程联机服务器" IsExpanded="{x:Bind VM.IsConnected, Mode=OneWay, Converter={StaticResource InvertBoolConverter}}">
                        <controls:SettingsExpander.HeaderIcon>
                            <FontIcon Glyph=""/>
                        </controls:SettingsExpander.HeaderIcon>

                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <ProgressRing x:Name="ConnectionLoading" Width="16" Height="16" VerticalAlignment="Center" x:Load="{x:Bind VM.IsConnecting, Mode=OneWay}"/>
                            <Button Command="{x:Bind VM.TryConnectServiceCommand}" Content="连接服务" IsEnabled="{x:Bind VM.ConnectButtonEnabled, Mode=OneWay}"/>
                            <Button Command="{x:Bind VM.DisconnectServiceCommand}" Content="断开服务" IsEnabled="{x:Bind VM.IsConnected, Mode=OneWay}"/>
                        </StackPanel>

                        <controls:SettingsExpander.Items>
                            <controls:SettingsCard Header="ConnectX 服务节点" IsEnabled="{x:Bind VM.ConnectButtonEnabled, Mode=OneWay}">
                                <controls:SettingsCard.Description>
                                    <TextBlock Foreground="{ThemeResource SystemErrorTextColor}" Text="请注意，目前不同节点之间不共享房间信息"/>
                                </controls:SettingsCard.Description>

                                <StackPanel Orientation="Horizontal" Spacing="8">
                                    <TextBox x:Name="UserServerAddressBox" x:Load="{x:Bind VM.ShowUserServerAddressBox, Mode=OneWay}" Text="{x:Bind VM.UserServerAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <ComboBox SelectedIndex="{x:Bind VM.ServerNodeSelection, Mode=TwoWay}">
                                        <ComboBoxItem Content="启动器自建节点"/>
                                        <ComboBoxItem Content="喵云赞助节点"/>
                                        <ComboBoxItem Content="用户输入节点"/>
                                    </ComboBox>
                                </StackPanel>
                            </controls:SettingsCard>
                        </controls:SettingsExpander.Items>
                    </controls:SettingsExpander>

                    <TextBlock Style="{ThemeResource SettingsSectionHeaderTextBlockStyle}" Text="房间状态"/>

                    <InfoBar x:Name="RoomInfoBar" Title="未创建或加入房间" Margin="0,0,0,-2" x:Load="{x:Bind VM.IsInRoom, Mode=OneWay, Converter={StaticResource InvertBoolConverter}}" IsClosable="False" IsOpen="True" Opacity="0.85" Severity="Informational"/>

                    <InfoBar x:Name="InRoomInfoBar" Title="已在房间中" Margin="0,0,0,-2" x:Load="{x:Bind VM.IsInRoom, Mode=OneWay}" IsClosable="False" IsOpen="True" Opacity="0.85" Severity="Success"/>

                    <controls:SettingsCard x:Name="CreateOrJoinRoomCard" x:Load="{x:Bind VM.IsInRoom, Mode=OneWay, Converter={StaticResource InvertBoolConverter}}" Description="通过邀请码分享你的房间，或使用其他房间的邀请码" Header="创建或加入一个联机房间" IsEnabled="{x:Bind VM.IsConnected, Mode=OneWay}">
                        <controls:SettingsCard.HeaderIcon>
                            <FontIcon Glyph=""/>
                        </controls:SettingsCard.HeaderIcon>
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <ProgressRing x:Name="OperationLoading" Width="16" Height="16" VerticalAlignment="Center" x:Load="{x:Bind VM.IsOperatingRoom, Mode=OneWay}"/>
                            <Button Command="{x:Bind VM.CreateRoomCommand}" Content="创建房间" IsEnabled="{x:Bind VM.CanCreateOrJoinRoom, Mode=OneWay}"/>
                            <Button Command="{x:Bind VM.JoinRoomCommand}" Content="加入房间" IsEnabled="{x:Bind VM.CanCreateOrJoinRoom, Mode=OneWay}"/>
                        </StackPanel>
                    </controls:SettingsCard>

                    <controls:SettingsCard x:Name="RoomInfoCard" x:Load="{x:Bind VM.IsInRoom, Mode=OneWay}" IsEnabled="{x:Bind VM.IsConnected, Mode=OneWay}">
                        <controls:SettingsCard.Header>
                            <TextBlock>
                                <Run Text="在房间中："/>
                                <Run Text="{x:Bind VM.RoomInfo.RoomName, Mode=OneWay}"/>
                            </TextBlock>
                        </controls:SettingsCard.Header>
                        <controls:SettingsCard.Description>
                            <StackPanel Orientation="Horizontal" Spacing="8">
                                <TextBlock x:Name="RoomPrivateText" x:Load="{x:Bind VM.RoomInfo.IsPrivate, Mode=OneWay}" Text="私人房间"/>
                                <TextBlock x:Name="RoomPublicText" x:Load="{x:Bind VM.RoomInfo.IsPrivate, Converter={StaticResource InvertBoolConverter}, Mode=OneWay}" Text="公开房间"/>
                                <TextBlock x:Name="RoomDescriptionText" x:Load="{x:Bind VM.ShowRoomDescription, Mode=OneWay}">
                                    <Run Text="房间描述："/>
                                    <Run Text="{x:Bind VM.RoomInfo.RoomDescription, Mode=OneWay}"/>
                                </TextBlock>
                            </StackPanel>
                        </controls:SettingsCard.Description>
                        <controls:SettingsCard.HeaderIcon>
                            <FontIcon Glyph=""/>
                        </controls:SettingsCard.HeaderIcon>
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <StackPanel x:Name="RoomControlPanel" x:Load="{x:Bind VM.IsRoomOwner, Mode=OneWay}" Orientation="Horizontal" Spacing="8">
                                <TextBlock VerticalAlignment="Center" Text="房间邀请码："/>

                                <HyperlinkButton x:Name="CopyButton" VerticalAlignment="Center" Command="{x:Bind VM.CopyShortIdCommand}" Content="{x:Bind VM.RoomInfo.RoomShortId, Mode=OneWay}"/>
                            </StackPanel>

                            <Button Command="{x:Bind VM.LeaveRoomCommand}">
                                <StackPanel>
                                    <TextBlock x:Name="LeaveButtonText" x:Load="{x:Bind VM.IsRoomOwner, Mode=OneWay, Converter={StaticResource InvertBoolConverter}}" Text="离开房间"/>
                                    <TextBlock x:Name="DismissButtonText" x:Load="{x:Bind VM.IsRoomOwner, Mode=OneWay}" Text="解散房间"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </controls:SettingsCard>

                    <InfoBar x:Name="ListenedServerInfoBar" Title="监听到游戏广播" Margin="0,0,0,-2" x:Load="{x:Bind VM.ListenedServer, Mode=OneWay}" IsClosable="False" IsOpen="True" Message="{x:Bind VM.ListenedServerName, Mode=OneWay}" Opacity="0.85" Severity="Success">
                        <InfoBar.ActionButton>
                            <HyperlinkButton Content="{x:Bind VM.ListenedServerPort, Mode=OneWay}"/>
                        </InfoBar.ActionButton>
                    </InfoBar>

                    <controls:SettingsCard x:Name="RoomUserInfoCard" x:Load="{x:Bind VM.IsInRoom, Mode=OneWay}" Header="房间成员" IsEnabled="{x:Bind VM.IsConnected, Mode=OneWay}">
                        <controls:SettingsCard.Description>
                            <TextBlock>
                                <Run Text="{x:Bind VM.RoomInfo.CurrentUserCount, Mode=OneWay}"/>
                                <Run Text="/"/>
                                <Run Text="{x:Bind VM.RoomInfo.MaxUserCount, Mode=OneWay}"/>
                                <Run Text="名玩家"/>
                            </TextBlock>
                        </controls:SettingsCard.Description>
                        <controls:SettingsCard.HeaderIcon>
                            <FontIcon Glyph=""/>
                        </controls:SettingsCard.HeaderIcon>

                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <HyperlinkButton x:Name="PingButton" x:Load="{x:Bind VM.IsRoomOwner, Mode=OneWay, Converter={StaticResource InvertBoolConverter}}" Command="{x:Bind VM.RefreshPingCommand}">
                                <TextBlock>
                                    <Run Text="{x:Bind VM.Ping, Mode=OneWay}"/>
                                    <Run Text="ms"/>
                                </TextBlock>
                            </HyperlinkButton>

                            <HyperlinkButton x:Name="OwnerText" x:Load="{x:Bind VM.IsRoomOwner, Mode=OneWay}" Content="你是房主"/>
                        </StackPanel>
                    </controls:SettingsCard>

                    <GridView x:Name="UserView" x:Load="{x:Bind VM.IsInRoom, Mode=OneWay}" IsEnabled="{x:Bind VM.IsConnected, Mode=OneWay}" ItemsSource="{x:Bind VM.RoomInfo.Users, Mode=OneWay}">
                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="group:UserInfo">
                                <Border Width="160" MinHeight="40" Padding="16,8" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" PointerEntered="Border_PointerEntered" PointerExited="Border_PointerExited">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Border Padding="5,0,5,0.5" VerticalAlignment="Center" CornerRadius="2.5">
                                            <Border.Background>
                                                <SolidColorBrush Opacity="0.25" Color="{ThemeResource SystemAccentColor}"/>
                                            </Border.Background>
                                            <TextBlock Margin="0,-1,0,0" VerticalAlignment="Center" Style="{ThemeResource CaptionTextBlockStyle}" Text="{x:Bind local:ConnectXPage.GetTypeFromDisplayName(DisplayName)}"/>
                                        </Border>

                                        <TextBlock Grid.Column="1" Margin="12,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{ThemeResource BaseTextBlockStyle}" Text="{x:Bind local:ConnectXPage.GetNameFromDisplayName(DisplayName)}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"/>

                                        <HyperlinkButton Name="KickButton" Grid.Column="2" Margin="16,0,0,0" Padding="5,0,5,0.5" VerticalAlignment="Center" CommandParameter="{x:Bind}" Loaded="KickButton_Loaded" Visibility="Collapsed">
                                            <TextBlock Margin="0,-2,0,0" VerticalAlignment="Center" Text="移出"/>
                                        </HyperlinkButton>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>

                    <TeachingTip Title="已复制到剪切板" IsOpen="{x:Bind VM.CopyTeachingTipIsOpen, Mode=TwoWay}" Target="{x:Bind CopyButton}">
                        <TeachingTip.IconSource>
                            <FontIconSource Glyph=""/>
                        </TeachingTip.IconSource>
                    </TeachingTip>
                </StackPanel>
            </Border>
        </ScrollViewer>

        <!--  Visual states reflect the application's window size  -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="LayoutVisualStates">
                <VisualState x:Name="WideLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger>
                            <AdaptiveTrigger.MinWindowWidth>
                                <x:Double>641</x:Double>
                            </AdaptiveTrigger.MinWindowWidth>
                        </AdaptiveTrigger>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="NarrowLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="stackPanel.Margin" Value="20, 10, 20, 20"/>
                        <Setter Target="border.Margin" Value="20, 0, 20, 20"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
